{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 33,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "0ozuynyp8a",
  "leftColumn": 2,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 32,
  "mobileLeftColumn": 21,
  "mobileRightColumn": 44,
  "mobileTopRow": 2,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "parentColumnSpace": 9.359375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 25,
  "srcDoc": {
    "css": "#chartContainer {\n  width: 80%;\n  max-width: 500px;\n  margin: 0 auto;\n}\n\ncanvas {\n  max-width: 100%;\n}",
    "html": "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.css\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js\"></script>\n<div id=\"root\"></div>",
    "js": "import React, { useEffect, useRef } from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport ReactDOM from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport { Chart, PieController, ArcElement, Tooltip, Legend } from 'https://cdn.jsdelivr.net/npm/chart.js@3.7.0/+esm';\nfunction getMockValues() {\n  return [33, 33, 34]; // Почти равномерно — красиво смотрится\n}\nfunction Dashboard() {\n  const chartRef = useRef(null);\n  useEffect(() => {\n    Chart.register(PieController, ArcElement, Tooltip, Legend);\n    const ctx = chartRef.current.getContext('2d');\n\n    // Создание градиентов\n    const gradient1 = ctx.createLinearGradient(0, 0, 300, 0);\n    gradient1.addColorStop(0, '#00f2fe');\n    gradient1.addColorStop(1, '#4facfe');\n    const gradient2 = ctx.createLinearGradient(0, 0, 0, 300);\n    gradient2.addColorStop(0, '#43e97b');\n    gradient2.addColorStop(1, '#38f9d7');\n    const gradient3 = ctx.createLinearGradient(0, 0, 300, 300);\n    gradient3.addColorStop(0, '#f9d423');\n    gradient3.addColorStop(1, '#ff4e50');\n    const data = {\n      labels: ['🔥 Продуктивность', '🚀 Энергия', '🎯 Фокус'],\n      datasets: [{\n        data: getMockValues(),\n        backgroundColor: [gradient3, gradient2, gradient1],\n        borderWidth: 4,\n        borderColor: '#ffffff',\n        hoverOffset: 12\n      }]\n    };\n    const myChart = new Chart(ctx, {\n      type: 'pie',\n      data: data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n            labels: {\n              font: {\n                size: 14,\n                family: \"'Segoe UI', sans-serif\"\n              },\n              boxWidth: 20,\n              padding: 20,\n              color: '#333'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                return ` ${tooltipItem.label}: ${tooltipItem.raw}%`;\n              }\n            }\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        }\n      }\n    });\n    return () => myChart.destroy();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartContainer\",\n    style: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    style: {\n      width: '100%',\n      height: 'auto'\n    }\n  }));\n}\nappsmith.onReady(() => {\n  ReactDOM.render(/*#__PURE__*/React.createElement(Dashboard, null), document.getElementById(\"root\"));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 2,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "#chartContainer {\n  width: 80%;\n  max-width: 500px;\n  margin: 0 auto;\n}\n\ncanvas {\n  max-width: 100%;\n}",
    "html": "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.css\" />\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js\"></script>\n<div id=\"root\"></div>",
    "js": "import React, { useEffect, useRef } from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport ReactDOM from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport { Chart, PieController, ArcElement, Tooltip, Legend } from 'https://cdn.jsdelivr.net/npm/chart.js@3.7.0/+esm';\n\nfunction getMockValues() {\n  return [33, 33, 34]; // Почти равномерно — красиво смотрится\n}\n\nfunction Dashboard() {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    Chart.register(PieController, ArcElement, Tooltip, Legend);\n\n    const ctx = chartRef.current.getContext('2d');\n\n    // Создание градиентов\n    const gradient1 = ctx.createLinearGradient(0, 0, 300, 0);\n    gradient1.addColorStop(0, '#00f2fe');\n    gradient1.addColorStop(1, '#4facfe');\n\n    const gradient2 = ctx.createLinearGradient(0, 0, 0, 300);\n    gradient2.addColorStop(0, '#43e97b');\n    gradient2.addColorStop(1, '#38f9d7');\n\n    const gradient3 = ctx.createLinearGradient(0, 0, 300, 300);\n    gradient3.addColorStop(0, '#f9d423');\n    gradient3.addColorStop(1, '#ff4e50');\n\n    const data = {\n      labels: ['🔥 Продуктивность', '🚀 Энергия', '🎯 Фокус'],\n      datasets: [{\n        data: getMockValues(),\n        backgroundColor: [gradient3, gradient2, gradient1],\n        borderWidth: 4,\n        borderColor: '#ffffff',\n        hoverOffset: 12,\n      }]\n    };\n\n    const myChart = new Chart(ctx, {\n      type: 'pie',\n      data: data,\n      options: {\n        responsive: true,\n        maintainAspectRatio: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n            labels: {\n              font: {\n                size: 14,\n                family: \"'Segoe UI', sans-serif\"\n              },\n              boxWidth: 20,\n              padding: 20,\n              color: '#333'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: (tooltipItem) => {\n                return ` ${tooltipItem.label}: ${tooltipItem.raw}%`;\n              }\n            }\n          }\n        },\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        }\n      }\n    });\n\n    return () => myChart.destroy();\n  }, []);\n\n  return (\n    <div id=\"chartContainer\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n      <canvas ref={chartRef} style={{ width: '100%', height: 'auto' }} />\n    </div>\n  );\n}\n\nappsmith.onReady(() => {\n  ReactDOM.render(<Dashboard />, document.getElementById(\"root\"));\n});\n"
  },
  "version": 1,
  "widgetId": "4vup9940gl",
  "widgetName": "Custom1"
}